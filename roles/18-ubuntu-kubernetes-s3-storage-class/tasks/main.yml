---

- name: Add Helm signing key
  get_url:
    url: https://baltocdn.com/helm/signing.asc
    dest: /tmp/helm-signing.asc
    mode: '0644'

- name: Create Helm keyring directory
  ansible.builtin.file:
    path: /usr/share/keyrings
    state: directory
    mode: '0755'

- name: Import Helm GPG key
  ansible.builtin.shell: cat /tmp/helm-signing.asc | gpg --dearmor | tee /usr/share/keyrings/helm.gpg > /dev/null

- name: Install apt-transport-https
  ansible.builtin.apt:
    name: apt-transport-https
    state: present
    update_cache: yes

- name: Add Helm apt repository
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ ansible_architecture }} signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main"
    filename: helm-stable-debian
    state: present

- name: Install Helm
  ansible.builtin.apt:
    name: helm
    state: present
    update_cache: yes

- name: Download NFS CSI Driver install script
  get_url:
    url: https://raw.githubusercontent.com/kubernetes-csi/csi-driver-nfs/v4.9.0/deploy/install-driver.sh
    dest: /tmp/install-driver.sh
    mode: '0755'

- name: Install NFS CSI Driver
  shell: /tmp/install-driver.sh v4.9.0 --

- name: Wait for NFS CSI controller pods to be ready
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: kube-system
    label_selectors:
      - app=csi-nfs-controller
    wait: yes
    wait_timeout: 300
    wait_condition:
      type: Ready
      status: "True"

- name: Wait for NFS CSI node pods to be ready
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: kube-system
    label_selectors:
      - app=csi-nfs-node
    wait: yes
    wait_timeout: 300
    wait_condition:
      type: Ready
      status: "True"

- name: Create NFS Storage Class
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: storage.k8s.io/v1
      kind: StorageClass
      metadata:
        name: nfs-csi
      provisioner: nfs.csi.k8s.io
      parameters:
        server: "{{ morpheus['customOptions']['nfs_server_ip'] }}"
        share: "{{ morpheus['customOptions']['nfs_share_path'] }}"
      reclaimPolicy: Delete
      volumeBindingMode: Immediate
      mountOptions:
        - nfsvers=3

- name: Verify Storage Class creation
  kubernetes.core.k8s_info:
    kind: StorageClass
    name: nfs-csi
  register: sc_status

- name: Display Storage Class status
  debug:
    var: sc_status