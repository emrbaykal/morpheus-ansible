---
- name: Debug inventory information
  debug:
    msg: 
      - "Current inventory_hostname: {{ inventory_hostname }}"
      - "ansible_fqdn: {{ ansible_fqdn }}"
      - "Groups defined: {{ groups.keys() | list }}"
      - "mysql_test group exists: {{ 'mysql_test' in groups }}"
      - "First host in mysql_test (if exists): {{ groups['mysql_test'][0] if 'mysql_test' in groups else 'Group not defined' }}"

- block:
  - name: Create MySQL Shell script for create InnoDB cluster
    copy:
      dest: "/tmp/configure_cluster.js"
      content: |
        // MySQL Shell script to configure cluster
        var host = "{{ hostvars[inventory_hostname]['ansible_hostname'] }}";
        var clusterAdmin = "{{ admin_user }}";
        var password = "{{ admin_password }}";
        var clusterName = "{{ cluster_name }}";
        var connection = clusterAdmin + "@" + primaryHost + ":3306";

        // Use try/catch for better error handling
        try {
          // Connect first with explicit credentials
          print("Connecting to instance...");
          shell.connect({
            host: host,
            user: clusterAdmin, 
            password: password
          });
          
          print("Connected successfully!");

          // Create Cluster
          print("Creating cluster '" + clusterName + "'...");
          var cluster = dba.createCluster(clusterName, {
            multiPrimary: false,
            primary: host,
            force: true
          });
          print("Cluster created successfully!");
          print("Cluster status: " + JSON.stringify(cluster.status(), null, 2));
          
        } catch(e) {
          print("ERROR: " + e.message);
          // Exit with error code for Ansible to detect failure
          os.exit(1);
        }
      mode: '0600'
    no_log: true

  - name: Create MySQL config file with credentials
    copy:
      dest: "/tmp/.mylogin.cnf"
      content: |
        [client]
        user={{ admin_user }}
        password={{ admin_password }}
        host={{ hostvars[inventory_hostname]['ansible_hostname'] }}
      mode: '0600'
    no_log: true

  - name: Execute MySQL Shell configuration script
    shell: >
      mysqlsh --defaults-file=/tmp/.mylogin.cnf --no-wizard --js --file=/tmp/configure_cluster.js
    register: mysqlsh_output
    failed_when: mysqlsh_output.rc != 0

  - name: Display MySQL Shell output
    debug:
      var: mysqlsh_output.stdout_lines

  - name: Restart mysql
    service:
      name: mysql
      state: restarted

  - name: Clean up temporary files
    file:
      path: "{{ item }}"
      state: absent
    with_items:
      - "/tmp/configure_cluster.js"
      - "/tmp/.mylogin.cnf"
    no_log: true
  
  when: inventory_hostname == groups['mysql_test'][0]
