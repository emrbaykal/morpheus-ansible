---
#- name: Create Cluster Admin
#  mysql_user:
#    name: "{{admin_user}}"
#    password: "{{admin_password}}"
#    priv: '*.*:ALL,GRANT'
#    host: '%'
#    append_privs: yes
#    login_user: root
#    login_password: "{{root_password}}"
#    state: present

#- name: Delete blank users
#  mysql_query:
#    query: "DELETE FROM mysql.user WHERE User='';"
#    login_user: root
#    login_password: "{{root_password}}"

#- name: Delete test database
#  mysql_db:
#    name: test
#    state: absent
#    login_user: root
#    login_password: "{{root_password}}"

#- name: Delete references to test database
#  mysql_query:
#    query: "DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%';"
#    login_user: root
#    login_password: "{{root_password}}"

#- name: Set invisible primary key
#  mysql_query:
#    query: "SET PERSIST sql_generate_invisible_primary_key=1;"
#    login_user: root
#    login_password: "{{root_password}}"

#- name: Create MySQL InnoDB configuration file
#  copy:
#    dest: /etc/mysql/mysql.conf.d/innodb-mysqld.cnf
#    content: |
#      [mysqld]
#      bind-address = 0.0.0.0
#      max_connections = 451
#      innodb_buffer_pool_size = 6G
#      innodb_buffer_pool_instances = 6
#      innodb_use_fdatasync = ON
#      sql_generate_invisible_primary_key = 1
#      binlog_expire_logs_seconds = 604800
#      binlog_expire_logs_auto_purge = ON
#
#      [mysqldump]
#      set-gtid-purged = OFF
#    owner: root
#    group: root
#    mode: '0644'
#  notify:
#    - Restart mysql

#- name: Flush handlers
#  meta: flush_handlers

- name: Create MySQL Shell script for instance configuration
  copy:
    dest: "/tmp/configure_instance.js"
    content: |
      // MySQL Shell script to check and configure instance
      var host = "{{ hostvars[inventory_hostname]['ansible_hostname'] }}";
      var clusterAdmin = "{{ admin_user }}";
      var password = "{{ admin_password }}";
      var connection = clusterAdmin + "@" + host + ":3306";

      print("Checking instance configuration...");
      var result = dba.checkInstanceConfiguration(connection, {
        password: password,
        interactive: false
      });
      print("Instance check result: " + JSON.stringify(result, null, 2));

      print("\nConfiguring instance...");
      var config_result = dba.configureInstance(connection, {
        password: password,
        interactive: false,
        restart: true,
        applierWorkerThreads: 4,
        clusterAdmin: clusterAdmin,
        clusterAdminPassword: password
      });
      print("Instance configuration result: " + JSON.stringify(config_result, null, 2));
    mode: '0600'
  no_log: true

#- name: Execute MySQL Shell configuration script
#  command: mysqlsh --no-wizard --execute="source('/tmp/configure_instance.js')"
#  register: mysqlsh_output

#- name: Display MySQL Shell output
#  debug:
#    var: mysqlsh_output.stdout_lines

#- name: Clean up temporary files
#  file:
#    path: "/tmp/configure_instance.js"
#    state: absent