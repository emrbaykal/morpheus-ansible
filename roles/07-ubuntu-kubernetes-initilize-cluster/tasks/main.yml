---
- name: Wait for 2 minutes before proceeding kubernetes cluster
  pause:
    prompt: "Wait for 2 minutes before proceeding kubernetes cluster !!"
    minutes: 2

- name: Install Required Kubernetes Management Packages
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - python3-pip

- name: Install python packages
  shell: pip3 install {{ item }} --break-system-packages
  with_items:
    - PyYAML
    - jmespath
    - kubernetes

- name: Check if admin.conf is present
  stat:
    path: /etc/kubernetes/admin.conf
  register: adminconf_check

- name: Initialize cluster
  block:
    - name: initialize K8S cluster
      shell: kubeadm init --pod-network-cidr={{ morpheus['customOptions']['pod_cidr'] }} --v=5
    - name: create .kube directory
      file:
        path: "$HOME/.kube"
        state: directory
        mode: 0755

    - name: copy admin.conf to user's kube config
      copy:
        remote_src: yes
        src: /etc/kubernetes/admin.conf
        dest: "{{ ansible_env.HOME }}/.kube/config"
        owner: "{{ lookup('pipe','id -u') | int }}"
        group: "{{ lookup('pipe','id -g') | int }}"

    - name: Wait for 3 minutes before proceeding configure Flannel
      pause:
        prompt: "Wait for 3 minutes before proceeding configure Flannel !!"
        minutes: 3

  when: not adminconf_check.stat.exists



- name: Get node status
  kubernetes.core.k8s_info:
    kind: Node
    name: "{{ ansible_hostname }}"
  register: nodestate

- name: Initilize Flannel
  block:
    - name: Download Flannel manifest
      get_url:
        url: https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
        dest: "{{ ansible_env.HOME }}/kube-flannel.yml"
        mode: '0644'

    - name: Update Network CIDR in Flannel manifest
      replace:
        path: "{{ ansible_env.HOME }}/kube-flannel.yml"
        regexp: '"Network": "[^"]*"'
        replace: "\"Network\": \"{{ morpheus['customOptions']['pod_cidr'] }}\""

    - name: Apply Flannel manifest
      kubernetes.core.k8s:
        state: present
        src: "{{ ansible_env.HOME }}/kube-flannel.yml" 
  when: 
    - nodestate.resources[0].status.conditions | selectattr('type', 'equalto', 'Ready') | map(attribute='status') | first == "False"

